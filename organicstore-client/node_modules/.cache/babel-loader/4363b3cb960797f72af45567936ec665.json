{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as productReducers from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { createOrderReducer, orderDetailsReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  createOrder: createOrderReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsInStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoInStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressInStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsInStorage,\n    shippingAddress: shippingAddressInStorage\n  },\n  userLogin: {\n    userInfo: userInfoInStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducers","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","createOrderReducer","orderDetailsReducer","reducer","productList","productListReducer","productDetails","productDetailReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","createOrder","orderDetails","cartItemsInStorage","localStorage","getItem","JSON","parse","userInfoInStorage","shippingAddressInStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,wBAJF,QAKO,yBALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,QAGO,0BAHP;AAKA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAET,eAAe,CAACU,kBADC;AAE9BC,EAAAA,cAAc,EAAEX,eAAe,CAACY,oBAFF;AAG9BC,EAAAA,IAAI,EAAEZ,WAHwB;AAI9Ba,EAAAA,SAAS,EAAEX,gBAJmB;AAK9BY,EAAAA,YAAY,EAAEX,mBALgB;AAM9BY,EAAAA,WAAW,EAAEd,kBANiB;AAO9Be,EAAAA,iBAAiB,EAAEZ,wBAPW;AAQ9Ba,EAAAA,WAAW,EAAEZ,kBARiB;AAS9Ba,EAAAA,YAAY,EAAEZ;AATgB,CAAD,CAA/B;AAYA,MAAMa,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFJ;AAIA,MAAMG,iBAAiB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,IAFJ;AAIA,MAAMI,wBAAwB,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD6B,GAE7B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBd,EAAAA,IAAI,EAAE;AACJe,IAAAA,SAAS,EAAER,kBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBZ,EAAAA,SAAS,EAAE;AAAEgB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACjC,KAAD,CAAnB;AAEA,MAAMkC,KAAK,GAAGrC,WAAW,CACvBa,OADuB,EAEvBmB,YAFuB,EAGvB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGkC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport * as productReducers from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport {\n  createOrderReducer,\n  orderDetailsReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  createOrder: createOrderReducer,\n  orderDetails: orderDetailsReducer,\n});\n\nconst cartItemsInStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoInStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressInStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsInStorage,\n    shippingAddress: shippingAddressInStorage,\n  },\n  userLogin: { userInfo: userInfoInStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}