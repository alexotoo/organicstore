{"ast":null,"code":"import * as cartConstants from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  console.log(state);\n  console.log(action.type);\n\n  switch (action.type) {\n    case cartConstants.CART_ADD_ITEM:\n      const item = action.payload;\n      const itemExist = state.cartItems.find(x => x.product === item.product);\n\n      if (itemExist) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === itemExist.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/store/reducers/cartReducers.js"],"names":["cartConstants","cartReducer","state","cartItems","action","console","log","type","CART_ADD_ITEM","item","payload","itemExist","find","x","product","map"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,4BAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAKP,aAAa,CAACQ,aAAnB;AACE,YAAMC,IAAI,GAAGL,MAAM,CAACM,OAApB;AAEA,YAAMC,SAAS,GAAGT,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGX,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBM,IAArB;AAFN,SAAP;AAID;;AAEH;AACE,aAAOP,KAAP;AArBJ;AAuBD,CA1BM","sourcesContent":["import * as cartConstants from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  console.log(state);\n  console.log(action.type);\n  switch (action.type) {\n    case cartConstants.CART_ADD_ITEM:\n      const item = action.payload;\n\n      const itemExist = state.cartItems.find((x) => x.product === item.product);\n\n      if (itemExist) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === itemExist.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}