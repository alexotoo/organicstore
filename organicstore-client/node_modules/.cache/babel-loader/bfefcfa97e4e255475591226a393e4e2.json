{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as productReducers from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsInStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoInStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : \"\";\nconst initialState = {\n  cart: {\n    cartItems: cartItemsInStorage\n  },\n  userLogin: userInfoInStorage\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducers","cartReducer","userLoginReducer","reducer","productList","productListReducer","productDetails","productDetailReducer","cart","userLogin","cartItemsInStorage","localStorage","getItem","JSON","parse","userInfoInStorage","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEJ,eAAe,CAACK,kBADC;AAE9BC,EAAAA,cAAc,EAAEN,eAAe,CAACO,oBAFF;AAG9BC,EAAAA,IAAI,EAAEP,WAHwB;AAI9BQ,EAAAA,SAAS,EAAEP;AAJmB,CAAD,CAA/B;AAOA,MAAMQ,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFJ;AAIA,MAAMG,iBAAiB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,EAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBR,EAAAA,IAAI,EAAE;AAAES,IAAAA,SAAS,EAAEP;AAAb,GADa;AAEnBD,EAAAA,SAAS,EAAEM;AAFQ,CAArB;AAKA,MAAMG,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CACvBQ,OADuB,EAEvBa,YAFuB,EAGvBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport * as productReducers from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n});\n\nconst cartItemsInStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoInStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : \"\";\n\nconst initialState = {\n  cart: { cartItems: cartItemsInStorage },\n  userLogin: userInfoInStorage,\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}