{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as productReducers from \"./reducers/productReducers\";\nimport * as cartReducers from \"./reducers/cartReducers\";\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducers.cartReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducers","cartReducers","reducer","productList","productListReducer","productDetails","productDetailReducer","cart","cartReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;AAEA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC9BO,EAAAA,WAAW,EAAEH,eAAe,CAACI,kBADC;AAE9BC,EAAAA,cAAc,EAAEL,eAAe,CAACM,oBAFF;AAG9BC,EAAAA,IAAI,EAAEN,YAAY,CAACO;AAHW,CAAD,CAA/B;AAMA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,MAAMa,KAAK,GAAGhB,WAAW,CACvBO,OADuB,EAEvBO,YAFuB,EAGvBV,mBAAmB,CAACF,eAAe,CAAC,GAAGa,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport * as productReducers from \"./reducers/productReducers\";\nimport * as cartReducers from \"./reducers/cartReducers\";\n\nconst reducer = combineReducers({\n  productList: productReducers.productListReducer,\n  productDetails: productReducers.productDetailReducer,\n  cart: cartReducers.cartReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}