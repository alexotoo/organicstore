{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/Pages/PaymentPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../store/actions/cartActions\";\n\nconst PaymentPage = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setPaymentMethod(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              id: \"mobilemoney\",\n              name: \"payment_option\",\n              value: \"mobilemoney\",\n              children: \"Mobile Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"card\",\n              id: \"card\",\n              name: \"payment_option\",\n              children: \"Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"yvd56KkKqWmXRtBNQZBDeg7/DRs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentPage;\nexport default PaymentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/Pages/PaymentPage.js"],"names":["React","useState","useDispatch","useSelector","Col","Form","Button","FormContainer","CheckoutSteps","savePaymentMethod","PaymentPage","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAMC,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;;AAEA,MAAI,CAACE,eAAL,EAAsB;AACpBH,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACD;;AAED,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMiB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR;AACAL,IAAAA,OAAO,CAACI,IAAR,CAAa,aAAb;AACD,GAJD;;AAMA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAOH,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAFnC;AAAA,oCAIE;AACE,cAAA,EAAE,EAAC,aADL;AAEE,cAAA,IAAI,EAAC,gBAFP;AAGE,cAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAWE;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAqB,cAAA,EAAE,EAAC,MAAxB;AAA+B,cAAA,IAAI,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwCE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CApED;;GAAMb,W;UACSP,W,EASID,W;;;KAVbQ,W;AAsEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../store/actions/cartActions\";\n\nconst PaymentPage = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n\n          <Col>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            >\n              <option\n                id=\"mobilemoney\"\n                name=\"payment_option\"\n                value=\"mobilemoney\"\n              >\n                Mobile Money\n              </option>\n              <option value=\"card\" id=\"card\" name=\"payment_option\">\n                Card\n              </option>\n            </Form.Control>\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Credit Card\"\n              id=\"card\"\n              name=\"paymentMethod\"\n              value=\"card\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Mobile Money\"\n              id=\"mobilemoney\"\n              name=\"paymentMethod\"\n              value=\"mobilemoney\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentPage;\n"]},"metadata":{},"sourceType":"module"}