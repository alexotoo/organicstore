{"ast":null,"code":"import * as cartConstants from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case cartConstants.CART_ADD_ITEM:\n      const item = action.payload;\n      const itemExist = state.cartItems.find(x => x.product === item.product);\n\n      if (itemExist) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === itemExist.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case cartConstants.CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case cartConstants.CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/abrahamotoo/WEB dev/JS PROJECTS/web sites projects/organicstore/organicstore-client/src/store/reducers/cartReducers.js"],"names":["cartConstants","cartReducer","state","cartItems","shippingAddress","action","type","CART_ADD_ITEM","item","payload","itemExist","find","x","product","map","CART_REMOVE_ITEM","filter","CART_SAVE_SHIPPING_ADDRESS"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,4BAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE;AAAlC,CADiB,EAEzBC,MAFyB,KAGtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAa,CAACO,aAAnB;AACE,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AAEA,YAAMC,SAAS,GAAGR,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGV,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBK,IAArB;AAFN,SAAP;AAID;;AAEH,SAAKR,aAAa,CAACe,gBAAnB;AACE,aAAO,EACL,GAAGb,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBa,MAAhB,CAAwBJ,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAnD;AAFN,OAAP;;AAKF,SAAKT,aAAa,CAACiB,0BAAnB;AACE,aAAO,EACL,GAAGf,KADE;AAELE,QAAAA,eAAe,EAAEC,MAAM,CAACI;AAFnB,OAAP;;AAKF;AACE,aAAOP,KAAP;AAjCJ;AAmCD,CAvCM","sourcesContent":["import * as cartConstants from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case cartConstants.CART_ADD_ITEM:\n      const item = action.payload;\n\n      const itemExist = state.cartItems.find((x) => x.product === item.product);\n\n      if (itemExist) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === itemExist.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case cartConstants.CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    case cartConstants.CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}